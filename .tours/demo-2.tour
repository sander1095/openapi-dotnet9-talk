{
  "$schema": "https://aka.ms/codetour-schema",
  "title": "Demo 2",
  "description": "This is a tour that will guide you through the code of the second demo.",
  "steps": [
    {
      "file": "demo2-customizing-and-build-time-openapi/BuildTimeOpenApiDocumentGeneration/BuildTimeOpenApiDocumentGeneration.csproj",
      "selection": {
        "start": {
          "line": 12,
          "character": 1
        },
        "end": {
          "line": 16,
          "character": 24
        }
      },
      "description": "We're starting the 2nd demo with generating OpenAPI specs at build-time. For this, we're using `Microsoft.AspNetCore.OpenApi` and `Microsoft.Extensions.ApiDescription.Server`."
    },
    {
      "file": "demo2-customizing-and-build-time-openapi/BuildTimeOpenApiDocumentGeneration/BuildTimeOpenApiDocumentGeneration.csproj",
      "selection": {
        "start": {
          "line": 7,
          "character": 1
        },
        "end": {
          "line": 8,
          "character": 96
        }
      },
      "description": "You can specify different settings for where you'd like this document to be generated. For example, we can use `OpenApiDocumentsDirectory` to save the OpenAPI spec into the project directory instead of `bin/`. \r\n\r\nWe can also use `OpenApiGenerateDocumentsOptions` to specify the file name. Normally, it's the name of the project. However, here we change it to `openapi-spec`.\r\n\r\nThere's a few more settings available, which you can find in the docs."
    },
    {
      "file": "demo2-customizing-and-build-time-openapi/BuildTimeOpenApiDocumentGeneration/Program.cs",
      "selection": {
        "start": {
          "line": 11,
          "character": 1
        },
        "end": {
          "line": 17,
          "character": 2
        }
      },
      "description": "Finally, this is optional.\r\n\r\nLike I said in the slides, this doesn't _purely_ generate the spec at build-time. It actually executes the entrypoint of your app with a mock server. \r\n\r\nIn some cases, you might want to prevent specific code paths being executed, like databases/configuration which might not be available or cause changes.\r\n\r\nWe can do this with the highlighted line of code. Any code in this block will only executed when we're NOT generating an OpenAPI spec at build time.\r\n\r\n\r\n**DO:**\r\n\r\n- Run `dotnet build` to generate the file\r\n  - If no file appears in this directory, run `dotnet clean` first"
    },
    {
      "file": "demo2-customizing-and-build-time-openapi/BuildTimeOpenApiDocumentGeneration/openapi-spec.json",
      "description": "And here we can see the generated OpenAPI file!",
      "line": 1
    },
    {
      "file": "demo2-customizing-and-build-time-openapi/CustomizingOpenApi/Program.cs",
      "selection": {
        "start": {
          "line": 10,
          "character": 1
        },
        "end": {
          "line": 13,
          "character": 54
        }
      },
      "description": "We might want to change the way OpenAPI files are generated. There's quite a lot of options available in the `AddOpenApi` overloads!\r\n\r\nWe're not going through all of them. Some more are covered in the docs. I want to focus on the transformers.\r\n\r\nFirst, let's look at the OpenAPI version. We can switch to OpenAPI 3 or OpenAPI 2."
    },
    {
      "file": "demo2-customizing-and-build-time-openapi/CustomizingOpenApi/Program.cs",
      "selection": {
        "start": {
          "line": 15,
          "character": 4
        },
        "end": {
          "line": 25,
          "character": 8
        }
      },
      "description": "Next, there's transformers. These allow you to change the looks of an OpenAPI document, operation or schema.\r\n\r\nEach of them can be a `Func<>`, an instance of a class of which you've implemented the corresponding interface, or a reference to that class with a generic type.\r\n\r\nThe most obvious time you might use this is to change metadata about a document. In this case, we're adding some useful contact information to the document. Very useful if this API is public, or if your organization has lots of teams!\r\n\r\n"
    },
    {
      "file": "demo2-customizing-and-build-time-openapi/CustomizingOpenApi/Program.cs",
      "selection": {
        "start": {
          "line": 27,
          "character": 5
        },
        "end": {
          "line": 27,
          "character": 81
        }
      },
      "description": "Now, let's add an operation transformer. An operation is an endpoint, basically."
    },
    {
      "file": "demo2-customizing-and-build-time-openapi/CustomizingOpenApi/Program.cs",
      "selection": {
        "start": {
          "line": 41,
          "character": 1
        },
        "end": {
          "line": 48,
          "character": 2
        }
      },
      "description": "This transformer will be quite simple. It will add a 500 error response to each operation!\r\n\r\nThe context gives you access to some more info about the OpenAPI document and the service provider, should you need to query some specific services."
    },
    {
      "file": "demo2-customizing-and-build-time-openapi/CustomizingOpenApi/Program.cs",
      "selection": {
        "start": {
          "line": 50,
          "character": 1
        },
        "end": {
          "line": 61,
          "character": 1
        }
      },
      "description": "Finally, we can transform schemas. A schema is a model.\r\n\r\nNormally, if the Json Type Info would hold a decimal, OpenAPI would map it to a double. It does this because there is no \"official\" better format. \r\n\r\nThis transformer changes the `format` to `decimal`, instead. This might help OpenAPI tooling like API client generators to generate C# decimals."
    },
    {
      "file": "demo2-customizing-and-build-time-openapi/CustomizingOpenApi/openapi.json",
      "selection": {
        "start": {
          "line": 3,
          "character": 5
        },
        "end": {
          "line": 9,
          "character": 9
        }
      },
      "description": "Here you see the changes for the OpenAPI metadata"
    },
    {
      "file": "demo2-customizing-and-build-time-openapi/CustomizingOpenApi/openapi.json",
      "selection": {
        "start": {
          "line": 38,
          "character": 1
        },
        "end": {
          "line": 40,
          "character": 14
        }
      },
      "description": "You also see an 500 return code added to the operation"
    },
    {
      "file": "demo2-customizing-and-build-time-openapi/CustomizingOpenApi/openapi.json",
      "selection": {
        "start": {
          "line": 68,
          "character": 1
        },
        "end": {
          "line": 71,
          "character": 15
        }
      },
      "description": "And finally, the number is stored as decimal"
    }
  ]
}